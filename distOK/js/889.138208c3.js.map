{"version":3,"file":"js/889.138208c3.js","mappings":"qNACEA,EAAAA,EAAAA,IACM,M,CAGR,OACCC,KAAO,e,QCCR,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O,4KCRCC,EAAAA,EAAAA,GAAyC,UAArC,oCAAgC,K,SAUxBC,MAAM,S,SAGNA,MAAM,S,kCASRA,MAAM,S,UACTD,EAAAA,EAAAA,GAAiD,SAA9C,8CAA0C,K,SAG1CC,MAAM,UAA8BC,MAAA,oE,6FA1B9CC,GACGH,EAAAA,EAAAA,GA4BO,QA5BAI,SAAM,mCAAeC,kBAAgB,KAAhBA,oBAAgB,mBAA5C,EACEL,EAAAA,EAAAA,GAcQ,wBAbNA,EAAAA,EAAAA,GAMU,SALVM,KAAK,QACLT,KAAK,Q,0CACSU,MAAKC,GACnBC,YAAY,qBACXR,OAAK,SAAGS,EAAAA,iBACTC,SAAA,IANA,oBAGcJ,SAUR,KANwBK,OAAOC,aAAAA,EAAAA,EAAAA,OAArCjB,EAAAA,EAAAA,IAEM,MAFN,EAAiD,mCAAjD,eAMM,KAHwBgB,OAAOE,cAAAA,EAAAA,EAAAA,OAArClB,EAAAA,EAAAA,IAEM,MAFN,EAAkD,yBAAlD,kBAKFI,EAAAA,EAAAA,GAGS,UAHAe,SAAoB,IAAZ,KAAOR,OAA2B,aAAZG,EAAAA,gBAAvC,MACoBM,WAAlB,WACAC,EAAAA,EAAAA,IAAsBC,EAAA,CAAAC,IAAAA,OADJH,EAAAA,EAAAA,OAAlBpB,EAAAA,EAAAA,IAA0C,OAAAwB,EAAd,aAD9B,UAI8BR,OAAOS,gBAAAA,EAAAA,EAAAA,OAArCzB,EAAAA,EAAAA,IAGM,MAHN,EAGM,CAFJ0B,GACAtB,EAAAA,EAAAA,GAAsC,SAAnC,cAAUuB,EAAAA,EAAAA,IAAAA,KAAOC,cAAY,OAFlC,oBAIgCC,UAAAA,EAAAA,EAAAA,OAAhC7B,EAAAA,EAAAA,IAEM,MAFN,EAA4G,sJAA5G,gBAzBF,Q,yBAoCJ,GACCC,KAAO,gBACP6B,WAAa,CACVC,YAAWA,EAAAA,GAGdC,OACC,MAAM,CACFrB,MAAO,GACPsB,QAAQ,wJACRjB,OAAS,CACPC,YAAY,EACZC,aAAY,EACZO,eAAc,GAEhBL,UAAS,EACTQ,aAAa,GACbC,SAAQ,EAERK,OAAQC,KAAKC,OAAOC,MAAM,QAC7BC,QAASH,KAAKC,OAAOC,MAAM,OAG5B,EAEDE,QAAQ,CACLC,eACA,MAAsB,IAAdL,KAAKxB,MAAe,GAAMwB,KAAKF,QAAQQ,KAAKN,KAAKxB,OAAU,cAAgB,WACnF,EACA+B,yBAYE,GAVAP,KAAKnB,OAAOC,YAAa,EACzBkB,KAAKnB,OAAOE,aAAc,EAC1BiB,KAAKV,eAAgB,EACrBU,KAAKP,aAAe,GACpBO,KAAKN,SAAU,EAGfM,KAAKnB,OAAOC,WAA4B,IAAdkB,KAAKxB,MAC/BwB,KAAKnB,OAAOE,aAAiBiB,KAAKF,QAAQQ,KAAKN,KAAKxB,QAE/CwB,KAAKnB,OAAOC,aAAekB,KAAKnB,OAAOE,YAAY,CACtD,MAAMyB,QAAiBC,EAAAA,EAAAA,yBAAqCT,KAAKxB,OAGzC,GAApBgC,EAASd,SACXM,KAAKN,SAAU,EACfM,KAAKxB,MAAU,GACfwB,KAAKf,UAAW,EAChBe,KAAKnB,OAAOS,eAAgB,IAG5BU,KAAKP,aAAee,EAASA,SAASE,QACtCV,KAAKnB,OAAOS,eAAgB,EAC5BU,KAAKf,UAAW,EAChBe,KAAKN,SAAU,EAEnB,CACF,I,QCzFJ,MAAM3B,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://liste-de-course/./src/components/SpinnerCpnt.vue","webpack://liste-de-course/./src/components/SpinnerCpnt.vue?0ffb","webpack://liste-de-course/./src/views/PasswordResetView.vue","webpack://liste-de-course/./src/views/PasswordResetView.vue?bad5"],"sourcesContent":["<template>\n\t\t<div>\n\t\t</div>\n</template>\n<script>\nexport default {\n\tname : 'SpinnerCpnt'\n}\n</script>\n\n<style lang=\"scss\" scoped>\nbutton{\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tfont-family: 'Quicksand',  Arial, Helvetica, sans-serif;\n\tmargin:.2em .5em .2em .5em;\n\tbackground: rgb(216, 226, 253);\n\tborder: none;\n\twidth: 8em;\n\theight: 2.5em;\n\t//box-shadow: 0px 0px 6px #555;\n\ttransition: 0.3s;\n\tcursor:pointer;\n}\n\ndiv{\n\theight: 1.3em;\n\twidth: 1.3em;\n  border:3px solid #ff00c8;\n  border-top:3px solid rgb(216, 226, 253);\n  border-radius:50%;\n\t\n\t-webkit-transition-property: -webkit-transform;\n  -webkit-transition-duration: 1.2s;\n  -webkit-animation-name: rotate;\n  -webkit-animation-iteration-count: infinite;\n  -webkit-animation-timing-function: linear;\n  \n  -moz-transition-property: -moz-transform;\n  -moz-animation-name: rotate; \n  -moz-animation-duration: 1.2s; \n  -moz-animation-iteration-count: infinite;\n  -moz-animation-timing-function: linear;\n  \n  transition-property: transform;\n  animation-name: rotate; \n  animation-duration: 1.2s; \n  animation-iteration-count: infinite;\n  animation-timing-function: linear;}\n\n@-webkit-keyframes rotate {\n    from {-webkit-transform: rotate(0deg);}\n    to {-webkit-transform: rotate(360deg);}\n}\n\n@-moz-keyframes rotate {\n    from {-moz-transform: rotate(0deg);}\n    to {-moz-transform: rotate(360deg);}\n}\n\n@keyframes rotate {\n    from {transform: rotate(0deg);}\n    to {transform: rotate(360deg);}\n}\n\n\n/* Rest of page style*/\nbody{\n  background:#FABC20;\n  font-family: 'Open Sans', sans-serif;\n  -webkit-font-smoothing: antialiased;\n  color:#393D3D;\n}\n\n#container{\n  width:90%;\n  max-width:700px;\n  margin:1em auto;\n  position:relative;\n}\n\n/* spinner positioning */\n\n#html-spinner, #svg-spinner{\n  position:absolute;\n  top:80px;\n  margin-left:-24px;\n}\n\n\n\n\n\n</style>","import { render } from \"./SpinnerCpnt.vue?vue&type=template&id=0d82b6c3&scoped=true\"\nimport script from \"./SpinnerCpnt.vue?vue&type=script&lang=js\"\nexport * from \"./SpinnerCpnt.vue?vue&type=script&lang=js\"\n\nimport \"./SpinnerCpnt.vue?vue&type=style&index=0&id=0d82b6c3&lang=scss&scoped=true\"\n\nimport exportComponent from \"/var/www/html/Projets_Vue/liste-de-course-v2/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0d82b6c3\"]])\n\nexport default __exports__","<template>\n\t<h1>Réinitialisation du mot de passe</h1>\n    <form @submit.prevent=\"this.handleFormSubmit\">\n      <label>\n        <input\n        type=\"email\"\n        name=\"Email\"\n        v-model=\"this.email\"\n        placeholder=\"Entrez votre email\"\n        :class=\"[isEmailValid()]\"\n        required/>\n        <div class=\"error\" v-if=\"this.errors.emailEmpty\">\n          Vous devez saisir un mail !\n        </div>\n        <div class=\"error\" v-if=\"this.errors.invalidMail\">\n          E-mail invalide !\n        </div>\n      </label>\n      \n      <button :disabled=\"this.email == '' || isEmailValid() == 'has-error'\">\n        <span v-if=\"!this.awaiting\">Envoyer</span>\n        <SpinnerCpnt v-else />\n      </button>\n      <div class=\"error\" v-if=\"this.errors.sendingFailed\">\n        <p>Il y eu un pb lors de votre enregistrement</p>\n        <p>Message : {{this.errorMessage}}</p>\t\t\n      </div>\n      <div class=\"success\" v-if=\"this.success\" style=\"font-weight: bold; margin-bottom: 1em; text-align: center;\">\n        C'est envoyé ! Si votre mail est enregistré dans notre base, vous recevrez un mail avec un lien pour modifier votre mot de passe ! A bientôt !\n      </div>\n    </form>\n</template>\n\n<script>\nimport { userService } from '@/services/userService';\n//import LoadingVue from '@/components/Layout/Loading.vue';\nimport SpinnerCpnt from '@/components/SpinnerCpnt.vue';\n\nexport default {\n\tname : 'PasswordReset',\n\tcomponents : {\n    SpinnerCpnt,\n  },\n  \n\tdata(){\n\t\treturn{\n      email: \"\",\n      regMail:/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n      errors : {\n        emailEmpty: false,\n        invalidMail:false,\n        sendingFailed:false,\n\t\t\t\t},\n      awaiting:false,\n      errorMessage:'',\n      success:false,\n      \n      userId :this.$route.query['user'],\n\t\t\tuserKey :this.$route.query['key'],\n      \n\t\t}\n\t},\n\t\t\n\tmethods:{\n    isEmailValid() {\n\t\t\t\treturn (this.email == \"\") ? \"\" : (this.regMail.test(this.email)) ? 'has-success' : 'has-error';\n\t\t\t},\n    async handleFormSubmit() {\n      //* Errors reinitialisation...\n      this.errors.emailEmpty = false;\n      this.errors.invalidMail = false;\n      this.sendingFailed = false;\n      this.errorMessage = '';\n      this.success = false;\n      \n      //* Now come the verifications \n      this.errors.emailEmpty = (this.email == '')\n      this.errors.invalidMail = ( !this.regMail.test(this.email) );\n      \n      if (!this.errors.emailEmpty && !this.errors.invalidMail){\n        const response = await userService.userAsksForPasswordReset(this.email);\n        //* If we have a message, it means we have an error...\n        \n        if (response.success == 1){\n          this.success = true;\n          this.email   = \"\";\n          this.awaiting = false;\n          this.errors.sendingFailed = false;\n        }\n        else {\n          this.errorMessage = response.response.message;\n          this.errors.sendingFailed = true;\n          this.awaiting = false;\n          this.success = false;\n        }\n      }\n    }\n\t}\n}\n\n</script>\n\n<style lang=\"scss\" scoped>\nh1{\n\ttext-align: center;\n}\nform {\n  display: flex;\n  flex-direction: column;\n  padding: 1em;\n  margin: 0;\n\n  label {\n    margin-bottom: 1em;\n\t\tcolor: #003e7c;\n\t\ttext-align: left;\n\t\tfont-weight: normal;\n\t\tfont-family: 'Quicksand',  Arial, Helvetica, sans-serif;\n    input {\n      display: block;\n      margin: 5px 0;\n      width: 100%;\n      padding: 0.75em 1.5em;\n      // border-radius: 0.5em;\n\t\t\tbackground: #ffffff;;\n      border: none;\n\t\t\tborder-bottom: #00aeff 2px solid;\n\t\t\tborder-left:  #00aeff 2px solid;;\n      box-sizing: border-box;\n\t\t\t&:hover{\n\t\t\tbackground: #e0e0e0;;\n\t\t\t}\n\t\t\t&:focus{\n\t\t\tbackground: #e0e0e0;;\n\t\t\t}\n\t\t\t&.has-error{\n\t\t\t\tbackground: rgb(255, 156, 156);\n\t\t\t}\n\t\t\t&.has-success{\n\t\t\t\tbackground: rgb(159, 206, 159);\n\t\t\t}\n    }\n  }\n}\n\n  button {\n    display: block;\n    margin: 5px 0 2.3em 0;\n    width: 100%;\n    padding: 1em 1.5em;\n    border-radius: 0.5em;\n    color: white;\n\t\tbackground: blueviolet;\n    font-weight: bold;\n    border: none;\n    box-sizing: border-box;\n\t\ttransition: 0.3s;\n\n     &:hover\n    {\n      cursor: pointer;\n\t\t\tbackground: darken(blueviolet, 15%);\n    }\n\t\t&:disabled{\n\t\t\tbackground: #bbb;\n\t\t}\n\t\t>div {\n\t\t\tmargin: auto;\n\t\t}\n  }\n\t\n</style>","import { render } from \"./PasswordResetView.vue?vue&type=template&id=7c8728ec&scoped=true\"\nimport script from \"./PasswordResetView.vue?vue&type=script&lang=js\"\nexport * from \"./PasswordResetView.vue?vue&type=script&lang=js\"\n\nimport \"./PasswordResetView.vue?vue&type=style&index=0&id=7c8728ec&lang=scss&scoped=true\"\n\nimport exportComponent from \"/var/www/html/Projets_Vue/liste-de-course-v2/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7c8728ec\"]])\n\nexport default __exports__"],"names":["_createElementBlock","name","__exports__","render","_createElementVNode","class","style","_hoisted_1","onSubmit","handleFormSubmit","type","email","$event","placeholder","$options","required","errors","emailEmpty","invalidMail","disabled","awaiting","_createBlock","_component_SpinnerCpnt","key","_hoisted_5","sendingFailed","_hoisted_7","_toDisplayString","errorMessage","success","components","SpinnerCpnt","data","regMail","userId","this","$route","query","userKey","methods","isEmailValid","test","async","response","userService","message"],"sourceRoot":""}